/**
 * Author:  rborowski
 * Created: 02.01.2024
 */

ALTER TABLE HALL CHANGE FILM32 FILM35 TINYINT DEFAULT 0;

RENAME TABLE PRODUCTIONATTACHMENT TO ATTACHMENT;
ALTER TABLE ATTACHMENT CHANGE PRODUCTION_ID ENTITYID BIGINT;
ALTER TABLE ATTACHMENT ADD COLUMN ENTITYTYPE VARCHAR(100) DEFAULT NULL;
ALTER TABLE ATTACHMENT ADD COLUMN MIMETYPE VARCHAR(100) DEFAULT NULL;
UPDATE ATTACHMENT SET ENTITYTYPE = "Movie";

CREATE SEQUENCE attachment_id_seq START WITH 2000 INCREMENT BY 1;
DROP SEQUENCE productionAttachment_id_seq;

CREATE TABLE ATTACHMENTCATEGORY (
  ID BIGINT PRIMARY KEY NOT NULL,
  CREATEUSER VARCHAR(50) DEFAULT NULL,
  CREATEDATE DATETIME DEFAULT NULL,
  MODIFYUSER VARCHAR(50) DEFAULT NULL,
  MODIFYDATE DATETIME DEFAULT NULL,
  NAME VARCHAR(20) DEFAULT NULL,
  ENTITYTYPE VARCHAR(100) DEFAULT NULL,
  ATTACHMENTTYPE VARCHAR(50) DEFAULT 'UNSET'
);
CREATE SEQUENCE attachmentCategories_id_seq START WITH 1 INCREMENT BY 1;

INSERT INTO ATTACHMENTCATEGORY(ID, NAME, ENTITYTYPE, ATTACHMENTTYPE) 
VALUES (nextval(attachmentCategories_id_seq), "Poster", null, "IMAGE");

INSERT INTO ATTACHMENTCATEGORY(ID, NAME, ENTITYTYPE, ATTACHMENTTYPE) 
VALUES (nextval(attachmentCategories_id_seq), "Szenenbild", null, "IMAGE");

INSERT INTO ATTACHMENTCATEGORY(ID, NAME, ENTITYTYPE, ATTACHMENTTYPE) 
VALUES (nextval(attachmentCategories_id_seq), "Trailer", null, "URL");

INSERT INTO ATTACHMENTCATEGORY(ID, NAME, ENTITYTYPE, ATTACHMENTTYPE) 
VALUES (nextval(attachmentCategories_id_seq), "externe Links", null, "URL");

INSERT INTO ATTACHMENTCATEGORY(ID, NAME, ENTITYTYPE, ATTACHMENTTYPE) 
VALUES (nextval(attachmentCategories_id_seq), "Downloads", null, "URL");

UPDATE ATTACHMENT SET MEDIATYPE = "VIDEO" WHERE MEDIATYPE = "2";
UPDATE ATTACHMENT SET MEDIATYPE = "IMAGE" WHERE MEDIATYPE = "3";
UPDATE ATTACHMENT SET MEDIATYPE = "URL" WHERE MEDIATYPE = "4";

UPDATE ACCESSRIGHT SET ROLE = "MANAGER" WHERE ROLE = "0";
UPDATE ACCESSRIGHT SET ROLE = "VENUE_MANAGER" WHERE ROLE = "1";

ALTER TABLE RESERVATION ADD COLUMN COMPANY VARCHAR(250) DEFAULT NULL;

CREATE VIEW RESERVATIONSUMMARY AS
SELECT
  R.ID AS ID,
  R.CREATEDATE AS CREATEDATE,
  R.CREATEUSER AS CREATEUSER,
  R.MODIFYDATE AS MODIFYDATE,
  R.MODIFYUSER AS MODIFYUSER,
  E.SEASON_ID AS SEASON_ID,
  E.DATE AS EVENTDATE, 
  E.STARTSHOW AS EVENTSTARTTIME, 
  P.TITLE AS MAINSHOWTITLE,
  V.ID as VENUE_ID,
  V.NAME AS VENUENAME, 
  V.CITY AS VENUECITY, 
  R.COMPANY AS COMPANY, 
  R.GIVENNAME AS GIVENNAME, 
  R.SURNAME AS SURNAME, 
  SUM(T.AMOUNT) AS TICKETS, 
  R.STATUS AS STATUS
FROM EVENT E, PRODUCTION P, VENUE V, RESERVATION R, RESERVATIONTICKET T, HALL H
WHERE
  R.EVENT_ID = E.ID AND E.HALL_ID = H.ID AND H.VENUE_ID = V.ID AND T.RESERVATION_ID = R.ID
GROUP BY R.ID;

CREATE TABLE MAILTEMPLATE (
  ID BIGINT PRIMARY KEY NOT NULL,
  CREATEUSER VARCHAR(50) DEFAULT NULL,
  CREATEDATE DATETIME DEFAULT NULL,
  MODIFYUSER VARCHAR(50) DEFAULT NULL,
  MODIFYDATE DATETIME DEFAULT NULL,
  SEASON_ID BIGINT DEFAULT NULL,
  SHORTCODE VARCHAR(50) DEFAULT NULL,
  NAME VARCHAR(150) DEFAULT NULL,
  DESCRIPTION TEXT DEFAULT NULL,
  SENDER VARCHAR(250) DEFAULT NULL,
  REPLYTO VARCHAR(250) DEFAULT NULL,
  SUBJECT VARCHAR(250) DEFAULT NULL,
  HTMLMESSAGE TEXT DEFAULT NULL
);
CREATE SEQUENCE mailTemplate_id_seq START WITH 1 INCREMENT BY 1;
CREATE INDEX IX_MAILTEMPLATE_SEASON ON MAILTEMPLATE(SEASON_ID);

INSERT INTO MAILTEMPLATE(ID, SHORTCODE, NAME, DESCRIPTION) 
VALUES (NEXTVAL(mailTemplate_id_seq), "RESERVATION_NEW", "Eingangsbestätigung der Buchung", "Wird automatisch gesendet, nachdem die Buchung eingegagen ist.");

INSERT INTO MAILTEMPLATE(ID, SHORTCODE, NAME, DESCRIPTION) 
VALUES (NEXTVAL(mailTemplate_id_seq), "RESERVATION_HOLD", "Wartende Buchung", "Kann versendet werden, denn Buchung noch nicht final bestätgt werden kann.");

INSERT INTO MAILTEMPLATE(ID, SHORTCODE, NAME, DESCRIPTION) 
VALUES (NEXTVAL(mailTemplate_id_seq), "RESERVATION_CONFIRMED", "Bestätigung der Buchung", "Kann zur Bestätigung der Buchung versendet werden.");

INSERT INTO MAILTEMPLATE(ID, SHORTCODE, NAME, DESCRIPTION) 
VALUES (NEXTVAL(mailTemplate_id_seq), "RESERVATION_CANCELED", "Stornierung der Buchung", "Kann zur Bestätigung der Stornierung versendet werden.");

CREATE TABLE RESERVATIONEXTRA (
  ID BIGINT PRIMARY KEY NOT NULL,
  CREATEUSER VARCHAR(50) DEFAULT NULL,
  CREATEDATE DATETIME DEFAULT NULL,
  MODIFYUSER VARCHAR(50) DEFAULT NULL,
  MODIFYDATE DATETIME DEFAULT NULL,
  RESERVATION_ID BIGINT DEFAULT NULL,
  FIELDNAME VARCHAR(100) DEFAULT NULL,
  VALUE VARCHAR(250) DEFAULT NULL
);
CREATE SEQUENCE reservationExtra_id_seq START WITH 1 INCREMENT BY 1;
CREATE INDEX IX_RESERVATIONEXTRA_RESERVATION ON RESERVATIONEXTRA(RESERVATION_ID);

ALTER TABLE EVENT ADD COLUMN REQUIREAFTERSHOW TINYINT DEFAULT 0;
ALTER TABLE EVENT ADD COLUMN HIDDEN TINYINT DEFAULT 0;
ALTER TABLE EVENT ADD COLUMN TRACK VARCHAR(150) DEFAULT NULL;